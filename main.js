//setSeed(101);

const roadlanes = 5;

const carCanvas = document.getElementById("carCanvas");
carCanvas.width = 400;
const networkCanvas = document.getElementById("networkCanvas");
networkCanvas.width = 400;
const nCars = document.getElementById("Ncars");

const carCtx = carCanvas.getContext("2d");
const networkCtx = networkCanvas.getContext("2d");

const road = new Road(carCanvas.width / 2, carCanvas.width * 0.9, roadlanes);

let trainedBrain =
  '{"levels":[{"inputs":[0.40611504311955837,0.16011983949031894,0,0,0,0,0],"outputs":[1,0,1,0,1,0,0,1],"biases":[-0.09503221227441488,0.02147974252464369,-0.19598262328458232,0.188949933424491,-0.15116089884649897,0.24486979380886154,-0.06563386780899183,-0.17256114962593896],"weights":[[0.1345608629541671,-0.2442283209009277,-0.13238191710188488,-0.11696960286175068,-0.14891108980518966,-0.3308916326259677,-0.10714416962845902,-0.18829403770393716],[0.02493544516786401,-0.19324559219025295,-0.024728759996403282,-0.1387835220268412,-0.3296729474636641,0.19820036533219576,-0.166165705558287,-0.028368473606320794],[0.028030629423537325,0.11719885711944918,0.03659297781113183,0.023448414873231634,0.060912085805542415,0.20072254348599416,-0.1357735306501531,0.020310477550856743],[0.10200792239470616,-0.3595460373385057,-0.09497118123861267,0.17302851998026886,-0.06544171751242406,0.09238014380725151,0.2957965506741152,-0.21081361609532592],[0.05169559682481042,-0.23282733570365483,0.22393277576144846,0.08128232136827829,0.2819568375931907,0.1263129790694083,0.258427581354014,-0.1325102431795744],[0.1134676687618757,-0.4109752002588998,0.239430997088716,-0.06050917411800834,-0.08138552381282275,-0.05722846919311759,-0.09264261245047259,0.04659157208372269],[0.36133145213303874,-0.21574167274035447,0.029821239203255023,-0.024929139969486702,0.093571664819973,0.012700386990432515,0.2881230773803228,0.018495759248634537]]},{"inputs":[1,0,1,0,1,0,0,1],"outputs":[0,1,0,0,0,1,0,0],"biases":[0.09064606739565845,0.07437549548395087,0.1032198227926755,0.17987942872330048,0.1469387471789688,-0.13968389753406107,0.179532761407596,-0.008398170744739752],"weights":[[0.05713412049752286,0.23227183867597123,-0.16032388154896088,-0.029894485084888837,-0.15825465462052843,0.03533375068157031,0.032328956942656,-0.03973244810518019],[-0.2153826061953888,0.03763749422065525,-0.05015515056251546,0.04484069140427634,0.004135492634986748,0.18394376429601772,-0.4219663153926977,-0.23377852917846015],[-0.12282817979408393,-0.14321705826303077,0.12106993970928145,-0.1967937585354879,-0.03249313173486081,0.21091960109723618,-0.13312927869599891,-0.35690448911552053],[-0.08295722272772957,-0.05636417006827289,0.029436256151451616,0.10391871092453225,-0.09401728444608448,0.009801647208177833,0.05474513281923608,-0.06945057434505214],[0.03443311751828476,0.07126660899002762,-0.13318515712437612,0.03721560369863023,-0.33829572943820596,0.07720817204639453,0.04772861996280758,-0.19522725109885683],[0.17201600539523165,0.09388618664722198,-0.35568027463511437,-0.07523751191886066,0.014032112614598913,0.17012810163485254,0.14419463479907754,0.09986270268018063],[0.2984908313568047,-0.07195242713539136,-0.10040842658374906,-0.11746413529625269,0.16276036340434322,0.11507704312688766,0.10082717433558042,0.21870722203072684],[-0.01688152525814073,0.31492391312734036,0.12378246426305234,-0.02558595779632026,0.07199442285342524,-0.15281588100281324,-0.17479478837275597,0.27941858897814537]]},{"inputs":[0,1,0,0,0,1,0,0],"outputs":[1,0,1,0],"biases":[-0.2754001654356029,0.1778947077205392,-0.07026257281456295,0.07035369628622701],"weights":[[0.3531905971987691,0.2583418209904581,-0.23395938229772975,-0.1156025052283648],[0.19261713534275274,0.0067304089343328075,-0.039999670203817256,-0.22955898100241215],[0.08707130661673965,0.3409397942832909,0.0797121329026328,-0.24419898819281188],[-0.402552007284633,0.1312470068566421,0.06566136226448879,0.07241833528797689],[0.02421904276943853,0.04950709149980306,-0.09175876397024159,-0.16718286525216383],[-0.08742393998191465,0.04230734415987239,0.059602089652894485,0.1054963352077884],[-0.040321013279730894,-0.30010361124914936,-0.1468827225495404,0.2507178407096043],[-0.3226872665369304,-0.15990682216913732,-0.11791462438396681,0.14603442187925672]]}]}';
//trainedBrain = false;
const N = 100;
const cars = generateCars(N);
let bestCar = cars[0];

if (trainedBrain) {
  for (let i = 0; i < cars.length; i++) {
    cars[i].brain = JSON.parse(trainedBrain);
    if (i != 0) {
      NeuralNetwork.mutate(cars[i].brain, 0.05);
    }
    2;
  }
}

if (localStorage.getItem("bestBrain")) {
  for (let i = 0; i < cars.length; i++) {
    cars[i].brain = JSON.parse(localStorage.getItem("bestBrain"));
    if (i != 0) {
      NeuralNetwork.mutate(cars[i].brain, 0.05);
    }
  }
}

let traffic = [];

let laneArray = [1, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3];
let speedArray = [
  1.1, 1.2, 1.1, 1.2, 1.1, 1.2, 1.1, 1.2, 1.1, 1.2, 1.1, 1.2, 1.1, 1.2, 1.1,
  1.2, 1.1, 1.2, 1.1,
];

for (let i = 0; i < 18; i++) {
  traffic.push(
    new Car(
      road.getLaneCenter(laneArray[i]),
      -150 * i - 300,
      30,
      50,
      "DUMMY",
      getRandomFloat(1, 3),
      //2,
      getRandomColor()
    )
  );
}

animate();

function save() {
  localStorage.setItem("bestBrain", JSON.stringify(bestCar.brain));
}

function discard() {
  localStorage.removeItem("bestBrain");
}

function generateCars(N) {
  const cars = [];
  for (let i = 1; i <= N; i++) {
    cars.push(new Car(road.getLaneCenter(2), 100, 30, 50, "AI", 4, "blue", i));
  }
  return cars;
}

function removeCar(id) {
  const index = cars.findIndex((c) => c.id == id);
  cars.splice(index, 1);
}

function animate(time) {
  for (let i = 0; i < traffic.length; i++) {
    traffic[i].update(road.borders, []);
  }
  for (let i = 0; i < cars.length; i++) {
    cars[i].update(road.borders, traffic);
  }
  bestCar = cars.find((c) => c.y == Math.min(...cars.map((c) => c.y)));

  for (let i = 0; i < traffic.length; i++) {
    if (-traffic[i].y + bestCar.y < -1000) {
      traffic[i].y = bestCar.y - 1000;
      //traffic[i].x=road.getLaneCenter(getRandomInt(0, roadlanes-1))
    }
  }

  carCanvas.height = window.innerHeight;
  networkCanvas.height = window.innerHeight;

  carCtx.save();
  carCtx.translate(0, -bestCar.y + carCanvas.height * 0.7);

  road.draw(carCtx);
  for (let i = 0; i < traffic.length; i++) {
    traffic[i].draw(carCtx);
  }
  carCtx.globalAlpha = 0.2;
  for (let i = 0; i < cars.length; i++) {
    cars[i].draw(carCtx);
  }
  carCtx.globalAlpha = 1;
  bestCar.draw(carCtx, true);

  carCtx.restore();

  nCars.innerHTML = cars.length;

  networkCtx.lineDashOffset = -time / 50;
  Visualizer.drawNetwork(networkCtx, bestCar.brain);
  requestAnimationFrame(animate);
}
